// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Api should create one default Api 1`] = `
Object {
  "Outputs": Object {
    "ApiRestApiEndpoint855DC26C": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiRestApiC7984005",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiRestApiDeploymentStageprod71DD819D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "ApiRestApiANY8CC70CDB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaLambda764FC51E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ApiRestApiC7984005",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ApiRestApiC7984005",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiANYApiPermissionApiRestApiANYDD83496C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaLambda764FC51E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiRestApiC7984005",
              },
              "/",
              Object {
                "Ref": "ApiRestApiDeploymentStageprod71DD819D",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiANYApiPermissionTestApiRestApiANY51E2113B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaLambda764FC51E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiRestApiC7984005",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiAccount82932634": Object {
      "DependsOn": Array [
        "ApiRestApiC7984005",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiRestApiCloudWatchRole3864A579",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ApiRestApiC7984005": Object {
      "Properties": Object {
        "Name": "ApiRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiRestApiCloudWatchRole3864A579": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiRestApiDeploymentB7CF0DF59512db6caad199d9ffe9471da2c7a535": Object {
      "DependsOn": Array [
        "ApiRestApiproxyANY18A85ECB",
        "ApiRestApiproxy8CE71C52",
        "ApiRestApiANY8CC70CDB",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ApiRestApiC7984005",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiRestApiDeploymentStageprod71DD819D": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ApiRestApiDeploymentB7CF0DF59512db6caad199d9ffe9471da2c7a535",
        },
        "RestApiId": Object {
          "Ref": "ApiRestApiC7984005",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiRestApiproxy8CE71C52": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiRestApiC7984005",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "ApiRestApiC7984005",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiRestApiproxyANY18A85ECB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaLambda764FC51E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ApiRestApiproxy8CE71C52",
        },
        "RestApiId": Object {
          "Ref": "ApiRestApiC7984005",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiRestApiproxyANYApiPermissionApiRestApiANYproxy9C7C448F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaLambda764FC51E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiRestApiC7984005",
              },
              "/",
              Object {
                "Ref": "ApiRestApiDeploymentStageprod71DD819D",
              },
              "/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiRestApiproxyANYApiPermissionTestApiRestApiANYproxy70982D2F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaLambda764FC51E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiRestApiC7984005",
              },
              "/test-invoke-stage/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaLambda764FC51E": Object {
      "DependsOn": Array [
        "LambdaLambdaServiceRole7D5BE2AE",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "lambda",
        },
        "FunctionName": "LambdaLambda",
        "Handler": "handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaLambdaServiceRole7D5BE2AE",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaLambdaServiceRole7D5BE2AE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
