// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LambdaWithGateway should not have changed 1`] = `
Object {
  "Outputs": Object {
    "LambdaWithGatewaylambdagatewayEndpoint368DAA0A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "LambdaWithGatewaylambdagatewayDeploymentStageprodBF2B45BE",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "LambdaWithGatewaylambdaE37E6FAD": Object {
      "DependsOn": Array [
        "LambdaWithGatewaylambdaServiceRoleE0CCB036",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "lambda",
        },
        "Handler": "handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdaServiceRoleE0CCB036",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaWithGatewaylambdaServiceRoleE0CCB036": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaWithGatewaylambdagatewayANYApiPermissionLambdaWithGatewaylambdagateway83B3B409ANY32CEF8E0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdaE37E6FAD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
              },
              "/",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayDeploymentStageprodBF2B45BE",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaWithGatewaylambdagatewayANYApiPermissionTestLambdaWithGatewaylambdagateway83B3B409ANYC4420069": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdaE37E6FAD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaWithGatewaylambdagatewayANYE677070E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaWithGatewaylambdaE37E6FAD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdagatewayD0F4974F",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaWithGatewaylambdagatewayAccount975D2ADE": Object {
      "DependsOn": Array [
        "LambdaWithGatewaylambdagatewayD0F4974F",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdagatewayCloudWatchRole715B2DEA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "LambdaWithGatewaylambdagatewayCloudWatchRole715B2DEA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaWithGatewaylambdagatewayD0F4974F": Object {
      "Properties": Object {
        "Name": "-gateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "LambdaWithGatewaylambdagatewayDeployment83CD4E0F9bcedfd9d4bd99bf1214a343e7ff3ce8": Object {
      "DependsOn": Array [
        "LambdaWithGatewaylambdagatewayproxyANYCC45073D",
        "LambdaWithGatewaylambdagatewayproxyE669614A",
        "LambdaWithGatewaylambdagatewayANYE677070E",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "LambdaWithGatewaylambdagatewayDeploymentStageprodBF2B45BE": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayDeployment83CD4E0F9bcedfd9d4bd99bf1214a343e7ff3ce8",
        },
        "RestApiId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "LambdaWithGatewaylambdagatewayproxyANYApiPermissionLambdaWithGatewaylambdagateway83B3B409ANYproxy9479DBC6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdaE37E6FAD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
              },
              "/",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayDeploymentStageprodBF2B45BE",
              },
              "/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaWithGatewaylambdagatewayproxyANYApiPermissionTestLambdaWithGatewaylambdagateway83B3B409ANYproxy62C5F6EB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdaE37E6FAD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
              },
              "/test-invoke-stage/*/{proxy+}",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LambdaWithGatewaylambdagatewayproxyANYCC45073D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "LambdaWithGatewaylambdaE37E6FAD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayproxyE669614A",
        },
        "RestApiId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "LambdaWithGatewaylambdagatewayproxyE669614A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "LambdaWithGatewaylambdagatewayD0F4974F",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "LambdaWithGatewaylambdagatewayD0F4974F",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
  },
}
`;
